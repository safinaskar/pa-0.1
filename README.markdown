Введение
--------
Это моя программа для формальной верификации математических доказательств, она же proof assistant. Программа пока не имеет названия, есть только рабочее название "pa" (сокращение от "proof assistant").

Итак, работа с программой происходит так: человек берёт какое-нибудь математическое доказательство, затем самостоятельно записывает это доказательство в формальном виде, т. е. на языке, пригодном для проверки компьютером. Затем это доказательство подаётся на вход моей программе и она сообщает, верно доказательство, или нет.

Моя программа относится к классу proof assistant'ов, т. е. программ для верификации доказательств. Моя программа не единственная в этом классе, есть полно других proof assistant'ов, например, Isabelle и Coq. Тем не менее, я начал писать свой proof assistant, т. к. все сущетвующие proof assistant'ы, на мой взгляд, имеют недостатки, и я собираюсь написать proof assistant, который будет лучше их всех :).

На данный момент моя работа над программой только началась. Версия, которую вы сейчас видите, написана на C++, я уже начал переписывать свою программу на Haskell'е, попутно внося изменения по существу, но Haskell-версия пока не работает, поэтому здесь я её не выкладываю. Почему же я тогда вообще выкладываю программу, раз работа только началась? Для удобства ссылок. Т. е. если я кому-нибудь скажу, что пишу proof assistant, я могу дать ему ссылку на этот проект на Github'е.

Честно говоря, это не proof assistant, а proof checker, т. к. нет интерактивности. Но я всё равно буду называть программу "proof assistant", т. к. я так привык

Установка и запуск программы
----------------------------
Работоспособность программы проверялась только на GNU/Linux, так что инструкции будут только для этой системы. Программа зависит от моей библиотеки libsh (http://github.com/safinaskar/libsh ). Итак, установите все зависимости (git, g++, make, cmake), затем:
```shell
cd a
echo b
```


